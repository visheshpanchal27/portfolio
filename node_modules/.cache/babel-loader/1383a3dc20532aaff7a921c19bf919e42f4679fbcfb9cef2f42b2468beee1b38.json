{"ast":null,"code":"import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nfunction handlePressEvent(node, event, lifecycle) {\n  const {\n    props\n  } = node;\n  if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n    return;\n  }\n  if (node.animationState && props.whileTap) {\n    node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n  }\n  const eventName = \"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle);\n  const callback = props[eventName];\n  if (callback) {\n    frame.postRender(() => callback(event, extractEventInfo(event)));\n  }\n}\nclass PressGesture extends Feature {\n  mount() {\n    const {\n      current\n    } = this.node;\n    if (!current) return;\n    this.unmount = press(current, (_element, startEvent) => {\n      handlePressEvent(this.node, startEvent, \"Start\");\n      return (endEvent, {\n        success\n      }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n    }, {\n      useGlobalTarget: this.node.props.globalTapTarget\n    });\n  }\n  unmount() {}\n}\nexport { PressGesture };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}