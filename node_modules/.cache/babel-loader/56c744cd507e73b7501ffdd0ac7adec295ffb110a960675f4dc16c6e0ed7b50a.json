{"ast":null,"code":"function resolveElements(elementOrSelector, scope, selectorCache) {\n  var _a;\n  if (elementOrSelector instanceof EventTarget) {\n    return [elementOrSelector];\n  } else if (typeof elementOrSelector === \"string\") {\n    let root = document;\n    if (scope) {\n      // TODO: Refactor to utils package\n      // invariant(\n      //     Boolean(scope.current),\n      //     \"Scope provided, but no element detected.\"\n      // )\n      root = scope.current;\n    }\n    const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n    return elements ? Array.from(elements) : [];\n  }\n  return Array.from(elementOrSelector);\n}\nexport { resolveElements };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}