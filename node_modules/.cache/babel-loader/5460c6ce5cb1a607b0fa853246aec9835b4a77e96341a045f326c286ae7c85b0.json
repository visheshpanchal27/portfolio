{"ast":null,"code":"import { invariant } from 'motion-utils';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateTarget } from '../interfaces/visual-element-target.mjs';\nimport { createDOMVisualElement, createObjectVisualElement } from '../utils/create-visual-element.mjs';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\nimport { resolveSubjects } from './resolve-subjects.mjs';\nimport { animateSingleValue } from './single-value.mjs';\nfunction isSingleValue(subject, keyframes) {\n  return isMotionValue(subject) || typeof subject === \"number\" || typeof subject === \"string\" && !isDOMKeyframes(keyframes);\n}\n/**\n * Implementation\n */\nfunction animateSubject(subject, keyframes, options, scope) {\n  const animations = [];\n  if (isSingleValue(subject, keyframes)) {\n    animations.push(animateSingleValue(subject, isDOMKeyframes(keyframes) ? keyframes.default || keyframes : keyframes, options ? options.default || options : options));\n  } else {\n    const subjects = resolveSubjects(subject, keyframes, scope);\n    const numSubjects = subjects.length;\n    invariant(Boolean(numSubjects), \"No valid elements provided.\");\n    for (let i = 0; i < numSubjects; i++) {\n      const thisSubject = subjects[i];\n      const createVisualElement = thisSubject instanceof Element ? createDOMVisualElement : createObjectVisualElement;\n      if (!visualElementStore.has(thisSubject)) {\n        createVisualElement(thisSubject);\n      }\n      const visualElement = visualElementStore.get(thisSubject);\n      const transition = {\n        ...options\n      };\n      /**\n       * Resolve stagger function if provided.\n       */\n      if (\"delay\" in transition && typeof transition.delay === \"function\") {\n        transition.delay = transition.delay(i, numSubjects);\n      }\n      animations.push(...animateTarget(visualElement, {\n        ...keyframes,\n        transition\n      }, {}));\n    }\n  }\n  return animations;\n}\nexport { animateSubject };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}