{"ast":null,"code":"import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nfunction handleHoverEvent(node, event, lifecycle) {\n  const {\n    props\n  } = node;\n  if (node.animationState && props.whileHover) {\n    node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n  }\n  const eventName = \"onHover\" + lifecycle;\n  const callback = props[eventName];\n  if (callback) {\n    frame.postRender(() => callback(event, extractEventInfo(event)));\n  }\n}\nclass HoverGesture extends Feature {\n  mount() {\n    const {\n      current\n    } = this.node;\n    if (!current) return;\n    this.unmount = hover(current, (_element, startEvent) => {\n      handleHoverEvent(this.node, startEvent, \"Start\");\n      return endEvent => handleHoverEvent(this.node, endEvent, \"End\");\n    });\n  }\n  unmount() {}\n}\nexport { HoverGesture };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}